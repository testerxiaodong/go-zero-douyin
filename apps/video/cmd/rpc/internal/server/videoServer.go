// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package server

import (
	"context"

	"go-zero-douyin/apps/video/cmd/rpc/internal/logic"
	"go-zero-douyin/apps/video/cmd/rpc/internal/svc"
	"go-zero-douyin/apps/video/cmd/rpc/pb"
)

type VideoServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedVideoServer
}

func NewVideoServer(svcCtx *svc.ServiceContext) *VideoServer {
	return &VideoServer{
		svcCtx: svcCtx,
	}
}

// 视频相关功能
func (s *VideoServer) PublishVideo(ctx context.Context, in *pb.PublishVideoReq) (*pb.PublishVideoResp, error) {
	l := logic.NewPublishVideoLogic(ctx, s.svcCtx)
	return l.PublishVideo(in)
}

func (s *VideoServer) VideoFeed(ctx context.Context, in *pb.VideoFeedReq) (*pb.VideoFeedResp, error) {
	l := logic.NewVideoFeedLogic(ctx, s.svcCtx)
	return l.VideoFeed(in)
}

func (s *VideoServer) UserVideoList(ctx context.Context, in *pb.UserVideoListReq) (*pb.UserVideoListResp, error) {
	l := logic.NewUserVideoListLogic(ctx, s.svcCtx)
	return l.UserVideoList(in)
}

func (s *VideoServer) DeleteVideo(ctx context.Context, in *pb.DeleteVideoReq) (*pb.DeleteVideoResp, error) {
	l := logic.NewDeleteVideoLogic(ctx, s.svcCtx)
	return l.DeleteVideo(in)
}

func (s *VideoServer) GetVideoById(ctx context.Context, in *pb.GetVideoByIdReq) (*pb.GetVideoByIdResp, error) {
	l := logic.NewGetVideoByIdLogic(ctx, s.svcCtx)
	return l.GetVideoById(in)
}
