// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package server

import (
	"context"

	"go-zero-douyin/apps/video/cmd/rpc/internal/logic"
	"go-zero-douyin/apps/video/cmd/rpc/internal/svc"
	"go-zero-douyin/apps/video/cmd/rpc/pb"
)

type VideoServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedVideoServer
}

func NewVideoServer(svcCtx *svc.ServiceContext) *VideoServer {
	return &VideoServer{
		svcCtx: svcCtx,
	}
}

// 视频相关功能
func (s *VideoServer) PublishVideo(ctx context.Context, in *pb.PublishVideoReq) (*pb.PublishVideoResp, error) {
	l := logic.NewPublishVideoLogic(ctx, s.svcCtx)
	return l.PublishVideo(in)
}

func (s *VideoServer) VideoFeed(ctx context.Context, in *pb.VideoFeedReq) (*pb.VideoFeedResp, error) {
	l := logic.NewVideoFeedLogic(ctx, s.svcCtx)
	return l.VideoFeed(in)
}

func (s *VideoServer) UserVideoList(ctx context.Context, in *pb.UserVideoListReq) (*pb.UserVideoListResp, error) {
	l := logic.NewUserVideoListLogic(ctx, s.svcCtx)
	return l.UserVideoList(in)
}

func (s *VideoServer) DeleteVideo(ctx context.Context, in *pb.DeleteVideoReq) (*pb.DeleteVideoResp, error) {
	l := logic.NewDeleteVideoLogic(ctx, s.svcCtx)
	return l.DeleteVideo(in)
}

func (s *VideoServer) GetVideoById(ctx context.Context, in *pb.GetVideoByIdReq) (*pb.GetVideoByIdResp, error) {
	l := logic.NewGetVideoByIdLogic(ctx, s.svcCtx)
	return l.GetVideoById(in)
}

// 分区相关功能
func (s *VideoServer) AddSection(ctx context.Context, in *pb.AddSectionReq) (*pb.AddSectionResp, error) {
	l := logic.NewAddSectionLogic(ctx, s.svcCtx)
	return l.AddSection(in)
}

func (s *VideoServer) DelSection(ctx context.Context, in *pb.DelSectionReq) (*pb.DelSectionResp, error) {
	l := logic.NewDelSectionLogic(ctx, s.svcCtx)
	return l.DelSection(in)
}

func (s *VideoServer) GetSectionById(ctx context.Context, in *pb.GetSectionByIdReq) (*pb.GetSectionByIdResp, error) {
	l := logic.NewGetSectionByIdLogic(ctx, s.svcCtx)
	return l.GetSectionById(in)
}

func (s *VideoServer) GetAllSection(ctx context.Context, in *pb.GetAllSectionReq) (*pb.GetAllSectionResp, error) {
	l := logic.NewGetAllSectionLogic(ctx, s.svcCtx)
	return l.GetAllSection(in)
}

// 标签相关功能
func (s *VideoServer) AddTag(ctx context.Context, in *pb.AddTagReq) (*pb.AddTagResp, error) {
	l := logic.NewAddTagLogic(ctx, s.svcCtx)
	return l.AddTag(in)
}

func (s *VideoServer) DelTag(ctx context.Context, in *pb.DelTagReq) (*pb.DelTagResp, error) {
	l := logic.NewDelTagLogic(ctx, s.svcCtx)
	return l.DelTag(in)
}

func (s *VideoServer) GetTagById(ctx context.Context, in *pb.GetTagByIdReq) (*pb.GetTagByIdResp, error) {
	l := logic.NewGetTagByIdLogic(ctx, s.svcCtx)
	return l.GetTagById(in)
}

func (s *VideoServer) GetAllTag(ctx context.Context, in *pb.GetAllTagReq) (*pb.GetAllTagResp, error) {
	l := logic.NewGetAllTagLogic(ctx, s.svcCtx)
	return l.GetAllTag(in)
}
