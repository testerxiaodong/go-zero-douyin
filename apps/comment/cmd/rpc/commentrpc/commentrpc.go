// Code generated by goctl. DO NOT EDIT.
// Source: commentrpc.proto

package commentrpc

import (
	"context"

	"go-zero-douyin/apps/comment/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddCommentReq                = pb.AddCommentReq
	AddCommentResp               = pb.AddCommentResp
	Comment                      = pb.Comment
	DelCommentReq                = pb.DelCommentReq
	DelCommentResp               = pb.DelCommentResp
	GetCommentCountByVideoIdReq  = pb.GetCommentCountByVideoIdReq
	GetCommentCountByVideoIdResp = pb.GetCommentCountByVideoIdResp
	GetCommentListByIdReq        = pb.GetCommentListByIdReq
	GetCommentListByIdResp       = pb.GetCommentListByIdResp

	Commentrpc interface {
		AddComment(ctx context.Context, in *AddCommentReq, opts ...grpc.CallOption) (*AddCommentResp, error)
		DelComment(ctx context.Context, in *DelCommentReq, opts ...grpc.CallOption) (*DelCommentResp, error)
		GetVideoCommentListById(ctx context.Context, in *GetCommentListByIdReq, opts ...grpc.CallOption) (*GetCommentListByIdResp, error)
		GetCommentCountByVideoId(ctx context.Context, in *GetCommentCountByVideoIdReq, opts ...grpc.CallOption) (*GetCommentCountByVideoIdResp, error)
	}

	defaultCommentrpc struct {
		cli zrpc.Client
	}
)

func NewCommentrpc(cli zrpc.Client) Commentrpc {
	return &defaultCommentrpc{
		cli: cli,
	}
}

func (m *defaultCommentrpc) AddComment(ctx context.Context, in *AddCommentReq, opts ...grpc.CallOption) (*AddCommentResp, error) {
	client := pb.NewCommentrpcClient(m.cli.Conn())
	return client.AddComment(ctx, in, opts...)
}

func (m *defaultCommentrpc) DelComment(ctx context.Context, in *DelCommentReq, opts ...grpc.CallOption) (*DelCommentResp, error) {
	client := pb.NewCommentrpcClient(m.cli.Conn())
	return client.DelComment(ctx, in, opts...)
}

func (m *defaultCommentrpc) GetVideoCommentListById(ctx context.Context, in *GetCommentListByIdReq, opts ...grpc.CallOption) (*GetCommentListByIdResp, error) {
	client := pb.NewCommentrpcClient(m.cli.Conn())
	return client.GetVideoCommentListById(ctx, in, opts...)
}

func (m *defaultCommentrpc) GetCommentCountByVideoId(ctx context.Context, in *GetCommentCountByVideoIdReq, opts ...grpc.CallOption) (*GetCommentCountByVideoIdResp, error) {
	client := pb.NewCommentrpcClient(m.cli.Conn())
	return client.GetCommentCountByVideoId(ctx, in, opts...)
}
