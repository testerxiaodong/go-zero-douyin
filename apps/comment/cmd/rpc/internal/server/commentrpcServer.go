// Code generated by goctl. DO NOT EDIT.
// Source: commentrpc.proto

package server

import (
	"context"

	"go-zero-douyin/apps/comment/cmd/rpc/internal/logic"
	"go-zero-douyin/apps/comment/cmd/rpc/internal/svc"
	"go-zero-douyin/apps/comment/cmd/rpc/pb"
)

type CommentrpcServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedCommentrpcServer
}

func NewCommentrpcServer(svcCtx *svc.ServiceContext) *CommentrpcServer {
	return &CommentrpcServer{
		svcCtx: svcCtx,
	}
}

func (s *CommentrpcServer) AddComment(ctx context.Context, in *pb.AddCommentReq) (*pb.AddCommentResp, error) {
	l := logic.NewAddCommentLogic(ctx, s.svcCtx)
	return l.AddComment(in)
}

func (s *CommentrpcServer) DelComment(ctx context.Context, in *pb.DelCommentReq) (*pb.DelCommentResp, error) {
	l := logic.NewDelCommentLogic(ctx, s.svcCtx)
	return l.DelComment(in)
}

func (s *CommentrpcServer) GetVideoCommentListById(ctx context.Context, in *pb.GetCommentListByIdReq) (*pb.GetCommentListByIdResp, error) {
	l := logic.NewGetVideoCommentListByIdLogic(ctx, s.svcCtx)
	return l.GetVideoCommentListById(in)
}

func (s *CommentrpcServer) GetCommentCountByVideoId(ctx context.Context, in *pb.GetCommentCountByVideoIdReq) (*pb.GetCommentCountByVideoIdResp, error) {
	l := logic.NewGetCommentCountByVideoIdLogic(ctx, s.svcCtx)
	return l.GetCommentCountByVideoId(in)
}
