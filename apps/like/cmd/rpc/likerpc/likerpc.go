// Code generated by goctl. DO NOT EDIT.
// Source: likerpc.proto

package likerpc

import (
	"context"

	"go-zero-douyin/apps/like/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetUserLikeVideoIdListReq      = pb.GetUserLikeVideoIdListReq
	GetUserLikeVideoIdListResp     = pb.GetUserLikeVideoIdListResp
	GetVideoLikeCountByVideoIdReq  = pb.GetVideoLikeCountByVideoIdReq
	GetVideoLikeCountByVideoIdResp = pb.GetVideoLikeCountByVideoIdResp
	VideoLikeReq                   = pb.VideoLikeReq
	VideoLikeResp                  = pb.VideoLikeResp
	VideoUnlikeReq                 = pb.VideoUnlikeReq
	VideoUnlikeResp                = pb.VideoUnlikeResp

	Likerpc interface {
		VideoLike(ctx context.Context, in *VideoLikeReq, opts ...grpc.CallOption) (*VideoLikeResp, error)
		VideoUnlike(ctx context.Context, in *VideoUnlikeReq, opts ...grpc.CallOption) (*VideoLikeResp, error)
		GetVideoLikeCountByVideoId(ctx context.Context, in *GetVideoLikeCountByVideoIdReq, opts ...grpc.CallOption) (*GetVideoLikeCountByVideoIdResp, error)
		GetUserLikeVideoIdList(ctx context.Context, in *GetUserLikeVideoIdListReq, opts ...grpc.CallOption) (*GetUserLikeVideoIdListResp, error)
	}

	defaultLikerpc struct {
		cli zrpc.Client
	}
)

func NewLikerpc(cli zrpc.Client) Likerpc {
	return &defaultLikerpc{
		cli: cli,
	}
}

func (m *defaultLikerpc) VideoLike(ctx context.Context, in *VideoLikeReq, opts ...grpc.CallOption) (*VideoLikeResp, error) {
	client := pb.NewLikerpcClient(m.cli.Conn())
	return client.VideoLike(ctx, in, opts...)
}

func (m *defaultLikerpc) VideoUnlike(ctx context.Context, in *VideoUnlikeReq, opts ...grpc.CallOption) (*VideoLikeResp, error) {
	client := pb.NewLikerpcClient(m.cli.Conn())
	return client.VideoUnlike(ctx, in, opts...)
}

func (m *defaultLikerpc) GetVideoLikeCountByVideoId(ctx context.Context, in *GetVideoLikeCountByVideoIdReq, opts ...grpc.CallOption) (*GetVideoLikeCountByVideoIdResp, error) {
	client := pb.NewLikerpcClient(m.cli.Conn())
	return client.GetVideoLikeCountByVideoId(ctx, in, opts...)
}

func (m *defaultLikerpc) GetUserLikeVideoIdList(ctx context.Context, in *GetUserLikeVideoIdListReq, opts ...grpc.CallOption) (*GetUserLikeVideoIdListResp, error) {
	client := pb.NewLikerpcClient(m.cli.Conn())
	return client.GetUserLikeVideoIdList(ctx, in, opts...)
}
