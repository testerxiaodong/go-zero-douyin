// Code generated by goctl. DO NOT EDIT.
// Source: search.proto

package search

import (
	"context"

	"go-zero-douyin/apps/search/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeleteUserDocumentReq   = pb.DeleteUserDocumentReq
	DeleteUserDocumentResp  = pb.DeleteUserDocumentResp
	DeleteVideoDocumentReq  = pb.DeleteVideoDocumentReq
	DeleteVideoDocumentResp = pb.DeleteVideoDocumentResp
	SearchUserReq           = pb.SearchUserReq
	SearchUserResp          = pb.SearchUserResp
	SearchVideoReq          = pb.SearchVideoReq
	SearchVideoResp         = pb.SearchVideoResp
	SyncUserInfoReq         = pb.SyncUserInfoReq
	SyncUserInfoResp        = pb.SyncUserInfoResp
	SyncVideoInfoReq        = pb.SyncVideoInfoReq
	SyncVideoInfoResp       = pb.SyncVideoInfoResp
	User                    = pb.User
	Video                   = pb.Video

	Search interface {
		// 视频相关功能
		SyncVideoInfo(ctx context.Context, in *SyncVideoInfoReq, opts ...grpc.CallOption) (*SyncVideoInfoResp, error)
		DeleteVideo(ctx context.Context, in *DeleteVideoDocumentReq, opts ...grpc.CallOption) (*DeleteVideoDocumentResp, error)
		SearchVideo(ctx context.Context, in *SearchVideoReq, opts ...grpc.CallOption) (*SearchVideoResp, error)
		// 用户相关功能
		SyncUserInfo(ctx context.Context, in *SyncUserInfoReq, opts ...grpc.CallOption) (*SyncUserInfoResp, error)
		DeleteUser(ctx context.Context, in *DeleteUserDocumentReq, opts ...grpc.CallOption) (*DeleteUserDocumentResp, error)
		SearchUser(ctx context.Context, in *SearchUserReq, opts ...grpc.CallOption) (*SearchUserResp, error)
	}

	defaultSearch struct {
		cli zrpc.Client
	}
)

func NewSearch(cli zrpc.Client) Search {
	return &defaultSearch{
		cli: cli,
	}
}

// 视频相关功能
func (m *defaultSearch) SyncVideoInfo(ctx context.Context, in *SyncVideoInfoReq, opts ...grpc.CallOption) (*SyncVideoInfoResp, error) {
	client := pb.NewSearchClient(m.cli.Conn())
	return client.SyncVideoInfo(ctx, in, opts...)
}

func (m *defaultSearch) DeleteVideo(ctx context.Context, in *DeleteVideoDocumentReq, opts ...grpc.CallOption) (*DeleteVideoDocumentResp, error) {
	client := pb.NewSearchClient(m.cli.Conn())
	return client.DeleteVideo(ctx, in, opts...)
}

func (m *defaultSearch) SearchVideo(ctx context.Context, in *SearchVideoReq, opts ...grpc.CallOption) (*SearchVideoResp, error) {
	client := pb.NewSearchClient(m.cli.Conn())
	return client.SearchVideo(ctx, in, opts...)
}

// 用户相关功能
func (m *defaultSearch) SyncUserInfo(ctx context.Context, in *SyncUserInfoReq, opts ...grpc.CallOption) (*SyncUserInfoResp, error) {
	client := pb.NewSearchClient(m.cli.Conn())
	return client.SyncUserInfo(ctx, in, opts...)
}

func (m *defaultSearch) DeleteUser(ctx context.Context, in *DeleteUserDocumentReq, opts ...grpc.CallOption) (*DeleteUserDocumentResp, error) {
	client := pb.NewSearchClient(m.cli.Conn())
	return client.DeleteUser(ctx, in, opts...)
}

func (m *defaultSearch) SearchUser(ctx context.Context, in *SearchUserReq, opts ...grpc.CallOption) (*SearchUserResp, error) {
	client := pb.NewSearchClient(m.cli.Conn())
	return client.SearchUser(ctx, in, opts...)
}
