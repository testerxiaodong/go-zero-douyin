// Code generated by MockGen. DO NOT EDIT.
// Source: ./common/utils/oss.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOssClient is a mock of OssClient interface.
type MockOssClient struct {
	ctrl     *gomock.Controller
	recorder *MockOssClientMockRecorder
}

// MockOssClientMockRecorder is the mock recorder for MockOssClient.
type MockOssClientMockRecorder struct {
	mock *MockOssClient
}

// NewMockOssClient creates a new mock instance.
func NewMockOssClient(ctrl *gomock.Controller) *MockOssClient {
	mock := &MockOssClient{ctrl: ctrl}
	mock.recorder = &MockOssClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOssClient) EXPECT() *MockOssClientMockRecorder {
	return m.recorder
}

// DeleteFile mocks base method.
func (m *MockOssClient) DeleteFile(fileFullPath string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFile", fileFullPath)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFile indicates an expected call of DeleteFile.
func (mr *MockOssClientMockRecorder) DeleteFile(fileFullPath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFile", reflect.TypeOf((*MockOssClient)(nil).DeleteFile), fileFullPath)
}

// DownLoadFile mocks base method.
func (m *MockOssClient) DownLoadFile(fileUploadPath string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DownLoadFile", fileUploadPath)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DownLoadFile indicates an expected call of DownLoadFile.
func (mr *MockOssClientMockRecorder) DownLoadFile(fileUploadPath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownLoadFile", reflect.TypeOf((*MockOssClient)(nil).DownLoadFile), fileUploadPath)
}

// GetOssFileFullAccessPath mocks base method.
func (m *MockOssClient) GetOssFileFullAccessPath(filePath string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOssFileFullAccessPath", filePath)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetOssFileFullAccessPath indicates an expected call of GetOssFileFullAccessPath.
func (mr *MockOssClientMockRecorder) GetOssFileFullAccessPath(filePath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOssFileFullAccessPath", reflect.TypeOf((*MockOssClient)(nil).GetOssFileFullAccessPath), filePath)
}

// UploadFile mocks base method.
func (m *MockOssClient) UploadFile(fileName, filePath string, data []byte) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFile", fileName, filePath, data)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UploadFile indicates an expected call of UploadFile.
func (mr *MockOssClientMockRecorder) UploadFile(fileName, filePath, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFile", reflect.TypeOf((*MockOssClient)(nil).UploadFile), fileName, filePath, data)
}
